// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName  String
  lastName   String
  profession String
  balance    Decimal      @db.Decimal(10, 2)
  type       ProfileType

  clientContracts     Contract[] @relation("ClientContracts")
  contractorContracts Contract[] @relation("ContractorContracts")

  @@map("Profiles")
}

model Contract {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  terms        String
  status       ContractStatus @default(NEW)

  clientId     String  @db.Uuid
  contractorId String  @db.Uuid
  client       Profile @relation("ClientContracts", fields: [clientId], references: [id])
  contractor   Profile @relation("ContractorContracts", fields: [contractorId], references: [id])

  jobs         Job[]

  @@map("Contracts")
}

model Job {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String
  price       Decimal   @db.Decimal(10, 2)
  paid        Boolean   @default(false)
  paymentDate DateTime?

  contractId  String    @db.Uuid
  contract    Contract  @relation(fields: [contractId], references: [id])

  @@map("Jobs")
}

enum ProfileType {
  CLIENT
  CONTRACTOR
}

enum ContractStatus {
  NEW
  IN_PROGRESS
  TERMINATED
}
